{
  "metaData" : {
    "id" : "slug_2019_maintaining-a-swift-projects-dependency-graph-with-weaver",
    "conference" : {
      "metaData" : {
        "id" : "slug",
        "name" : "Swift Language User Group"
      },
      "edition" : {
        "year" : 2019
      }
    },
    "source" : {
      "type" : "youtube",
      "value" : "h3CMMbgozG0"
    },
    "name" : "Maintaining a Swift project's dependency graph with Weaver",
    "authors" : [
      {
        "id" : "theophane-rupin",
        "name" : "Theophane Rupin"
      }
    ],
    "createdAt" : 1576855265.557682
  },
  "description" : "Software architecture has a lot to do with making sure the dependency graph is well structured. But in practice, maintaining a clean dependency graph while injecting dependencies in a type safe and runtime safe manner is a lot of repetitive code to write. This problem often leads developers to overuse the singleton pattern, making their code less modular at best, almost untestable at worst. Weaver is a code generation tool which makes it easy to inject dependencies where they are needed while maintaining a safe and clean dependency graph at the same time."
}